git的使用
    1.安装
        默认安装
    
    所有的git命令都是以git开头的
    2.用户信息的配置
    git config --global user.name "用户名"
    git config --global user.email "邮箱"
    全局配置,只需要配置一次即可,除非卸载或重装系统

    3.初始化本地仓库
    git init
    将当前所在文件夹初始化为本地仓库
    此时,会自动生成一个.git的隐藏文件夹,这就是本地仓库(不要动他)

    4.查看仓库的状态
    git status 

        git的四种状态
            untracked:新建的文件,但是还没有提交过,没有纳入到git的控制中
            staged: 执行到git add命令,提交到暂存区
            unmodfied:执行过git commit命令 工作区的文件没有任何修改，不需要提交
                不需要提交（nothing to commit,working tree clean）
            modified:工作区的有修改，还没有执行git add暂存操作
    
    5.提交
        1)git add
            将指定文件提交到暂存区
        2)git commit -m "提交的信息"
            将暂存区的内容全部提交到master上
    
    6.查看提交的信息
        git log

        git log --pretty=oneline
    
    7.撤销修改
        1）撤销工作区的修改
        git checkout --文件名

        2）撤销暂存区的修改
            2.1 git reset HEAD 文件名
                取消git add的操作
            2.2 git checkout --文件名
                取消工作区的修改
        3）撤销master的修改
            无法取消
            使用版本回退的方式
            先查看历史提交的id信息，然后确定需要回退到那个人提交点

            git reset --hard 提交的id
            id不需要写完整，一般只需要写前6位即可
    git status 会忽略空文件夹
    git add -A 会自动缓存所有修改内容到缓存区，也会忽略空文件夹

    HEAD
        就是一个存盘点，实现版本的控制
        git将每一次的提交传承一条时间线，这条时间线就是一条分支，默认只有一条分支，master也称之为主分支
        而HEAD指向就是当前分支
    
    8.创建分支
        git branch 分支名称
        创建一条新的分支，新分支的内容就是当前分支的内容
    
    9.查看当前仓库有哪些分支
        git branch
        前面有*号的表示当前所在的分支
    
    10.切换分支
        git checkout 分支名称
        切换到指定名称的分支上去
        此时，HEAD的指向夜壶发生改变（切换到的那个分支）
        在一条分支上的修改不会影响到其他分支上的数据

    11.合并分支
        git merge 分支名称
        将指定名称分支上修改的内容合并到当前分支
    
    12.删除分支
        git branch -d  分支名
        如果被删除的分支没有合并,则删除失败
        可以使用
        git branch -D 分支名 来强制删除

gitHub的使用
    1.注册
    www.github.com

    2.创建远程仓库
        点击右上角加号+,new repository
        在repository name中填写远程仓库的名称
        description可以不写,表示仓库的描述
        public与private选中public
        readme不要勾选
        点击create repository

    3.将远程仓库与本地仓库关联
        git remote add origin 远程仓库的url地址
        git remote 固定语法
        add 添加关联
        origin 表示关联的名称,指代后面的那个url地址

    4.将本地仓库的内容推送到远程仓库去
        git push -u origin master
        git push 固定语法
        -u 只在第一次推送的时候添加,以后就不需要了
        origin 代表关联时,远程仓库的url地址
        master 代表推送的分支

    5.查看当前仓库的所有关联
        git remote

    6.删除远程仓库的关联
        git remote remove 关联的名称
